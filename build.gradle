buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'ch.raffael.markdown-doclet:markdown-doclet:1.4'
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.16.0"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.4'
    }

}

subprojects {

    apply plugin: 'ch.raffael.markdown-doclet'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'java'

    archivesBaseName = "${rootProject.name}-${project.name}"
    group = 'com.mechjacktv.mechjackbot'
    version = '0.4.0'

    repositories {
        jcenter()
    }

    dependencies {
        testImplementation group: 'junit', name: 'junit', version: '4.+'
        testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.+'
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.+'
        testImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: '1.+'
    }

}

project(':chatbot') {

    apply plugin: 'application'
    apply plugin: "com.diffplug.gradle.spotless"
    apply plugin: 'findbugs'
    apply plugin: "jacoco"

    applicationName = "${rootProject.name}"
    mainClassName = 'com.mechjacktv.mechjackbot.main.Main'

    dependencies {
        implementation project(':protobufs')
        implementation group: 'com.google.code.gson', name: 'gson', version: '2.+'
        implementation group: 'com.google.guava', name: 'guava', version: '23.+'
        implementation group: 'com.google.inject', name: 'guice', version: '4.+'
        implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.+'
        implementation group: 'org.mapdb', name: 'mapdb', version: '3.+'
        implementation group: 'org.pircbotx', name: 'pircbotx', version: '2.+'
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.+'
        implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.+'
    }

    build.dependsOn 'jacocoTestReport', 'spotlessApply'

    tasks.withType(FindBugs) {
        reports {
            //noinspection GroovyAssignabilityCheck
            xml.enabled false
            //noinspection GroovyAssignabilityCheck
            html.enabled true
        }
    }

    spotless {
        java {
            importOrder 'java', 'javax', 'com', 'org', '', 'com.mechjacktv'
            eclipse().configFile rootProject.file('chatbot/src/main/resource/eclipse_java_formatter_rules.xml')
            removeUnusedImports()
            trimTrailingWhitespace()
            endWithNewline()
        }
        format 'misc', {
            target '**/*.gradle', '**/*.md', '**/.gitignore'
            trimTrailingWhitespace()
            indentWithSpaces(2)
            endWithNewline()
        }
    }

}

project(':protobufs') {

    apply plugin: 'com.google.protobuf'

    dependencies {
        compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.+'
    }

}
